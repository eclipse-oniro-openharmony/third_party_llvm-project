; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=aarch64-linux-ohos -global-isel -O0 -verify-machineinstrs -frame-pointer=all < %s | FileCheck %s

%"class.std::__h::basic_string" = type { %"class.std::__h::__compressed_pair" }
%"class.std::__h::__compressed_pair" = type { %"struct.std::__h::__compressed_pair_elem" }
%"struct.std::__h::__compressed_pair_elem" = type { %"struct.std::__h::basic_string<char>::__rep" }
%"struct.std::__h::basic_string<char>::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__h::basic_string<char>::__long" }
%"struct.std::__h::basic_string<char>::__long" = type { %struct.anon, i64, ptr }
%struct.anon = type { i64 }
%"struct.std::__h::__default_init_tag" = type { i8 }
%"struct.std::__h::basic_string<char>::__short" = type { %struct.anon.0, [0 x i8], [23 x i8] }
%struct.anon.0 = type { i8 }

@.str = private unnamed_addr constant [14 x i8] c"Hello, World!\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"str\00", align 1

; Function Attrs: mustprogress noinline optnone
define dso_local void @_Z12ReturnStringv(ptr noalias sret(%"class.std::__h::basic_string") align 8 %0) #0 {
; CHECK-LABEL: _Z12ReturnStringv:
; CHECK:       // %bb.0:
; CHECK-NEXT:    sub sp, sp, #48
; CHECK-NEXT:    .cfi_def_cfa_offset 48
; CHECK-NEXT:    stp x29, x30, [sp, #32] // 16-byte Folded Spill
; CHECK-NEXT:    add x29, sp, #32
; CHECK-NEXT:    .cfi_def_cfa w29, 16
; CHECK-NEXT:    .cfi_offset w30, -8
; CHECK-NEXT:    .cfi_offset w29, -16
; CHECK-NEXT:    mov x0, x8
; CHECK-NEXT:    str x0, [sp] // 8-byte Folded Spill
; CHECK-NEXT:    mov x8, x0
; CHECK-NEXT:    str x8, [sp, #8] // 8-byte Folded Spill
; CHECK-NEXT:    mov x8, x0
; CHECK-NEXT:    stur x8, [x29, #-8]
; CHECK-NEXT:    mov w8, wzr
; CHECK-NEXT:    mov w9, #1
; CHECK-NEXT:    str w9, [sp, #16] // 4-byte Folded Spill
; CHECK-NEXT:    and w8, w8, #0x1
; CHECK-NEXT:    and w8, w8, #0x1
; CHECK-NEXT:    sturb w8, [x29, #-9]
; CHECK-NEXT:    adrp x1, .L.str
; CHECK-NEXT:    add x1, x1, :lo12:.L.str
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B6v15004IDnEEPKc
; CHECK-NEXT:    ldr w9, [sp, #16] // 4-byte Folded Reload
; CHECK-NEXT:    and w8, w9, #0x1
; CHECK-NEXT:    and w8, w8, w9
; CHECK-NEXT:    sturb w8, [x29, #-9]
; CHECK-NEXT:    ldurb w8, [x29, #-9]
; CHECK-NEXT:    tbnz w8, #0, .LBB0_2
; CHECK-NEXT:    b .LBB0_1
; CHECK-NEXT:  .LBB0_1:
; CHECK-NEXT:    ldr x0, [sp] // 8-byte Folded Reload
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
; CHECK-NEXT:    b .LBB0_2
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    ldr x0, [sp, #8] // 8-byte Folded Reload
; CHECK-NEXT:    ldp x29, x30, [sp, #32] // 16-byte Folded Reload
; CHECK-NEXT:    add sp, sp, #48
; CHECK-NEXT:    ret
  %2 = alloca ptr, align 8
  %3 = alloca i1, align 1
  store ptr %0, ptr %2, align 8
  store i1 false, ptr %3, align 1
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B6v15004IDnEEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef @.str)
  store i1 true, ptr %3, align 1
  %4 = load i1, ptr %3, align 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #8
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: noinline optnone
declare dso_local void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B6v15004IDnEEPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) unnamed_addr #1 align 2

; Function Attrs: nounwind
declare void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #2

; Function Attrs: mustprogress noinline norecurse optnone
define dso_local noundef i32 @main() #3 personality ptr @__gxx_personality_v0 {
; CHECK-LABEL: main:
; CHECK:       .Lfunc_begin0:
; CHECK-NEXT:    .cfi_startproc
; CHECK-NEXT:    .cfi_personality 0, __gxx_personality_v0
; CHECK-NEXT:    .cfi_lsda 0, .Lexception0
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    sub sp, sp, #96
; CHECK-NEXT:    .cfi_def_cfa_offset 96
; CHECK-NEXT:    stp x29, x30, [sp, #80] // 16-byte Folded Spill
; CHECK-NEXT:    add x29, sp, #80
; CHECK-NEXT:    .cfi_def_cfa w29, 16
; CHECK-NEXT:    .cfi_offset w30, -8
; CHECK-NEXT:    .cfi_offset w29, -16
; CHECK-NEXT:    stur wzr, [x29, #-4]
; CHECK-NEXT:    sub x0, x29, #32
; CHECK-NEXT:    adrp x1, .L.str.1
; CHECK-NEXT:    add x1, x1, :lo12:.L.str.1
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B6v15004IDnEEPKc
; CHECK-NEXT:  .Ltmp0:
; CHECK-NEXT:    add x8, sp, #24
; CHECK-NEXT:    bl _Z12ReturnStringv
; CHECK-NEXT:  .Ltmp1:
; CHECK-NEXT:    b .LBB1_1
; CHECK-NEXT:  .LBB1_1:
; CHECK-NEXT:  .Ltmp3:
; CHECK-NEXT:    sub x0, x29, #32
; CHECK-NEXT:    add x1, sp, #24
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLB6v15004ERKS5_
; CHECK-NEXT:  .Ltmp4:
; CHECK-NEXT:    b .LBB1_2
; CHECK-NEXT:  .LBB1_2:
; CHECK-NEXT:    add x0, sp, #24
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
; CHECK-NEXT:    stur wzr, [x29, #-4]
; CHECK-NEXT:    sub x0, x29, #32
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
; CHECK-NEXT:    ldur w0, [x29, #-4]
; CHECK-NEXT:    ldp x29, x30, [sp, #80] // 16-byte Folded Reload
; CHECK-NEXT:    add sp, sp, #96
; CHECK-NEXT:    ret
; CHECK-NEXT:  .LBB1_3:
; CHECK-NEXT:  .Ltmp2:
; CHECK-NEXT:    mov w8, w1
; CHECK-NEXT:    str x0, [sp, #16]
; CHECK-NEXT:    str w8, [sp, #12]
; CHECK-NEXT:    b .LBB1_5
; CHECK-NEXT:  .LBB1_4:
; CHECK-NEXT:  .Ltmp5:
; CHECK-NEXT:    mov w8, w1
; CHECK-NEXT:    str x0, [sp, #16]
; CHECK-NEXT:    str w8, [sp, #12]
; CHECK-NEXT:    add x0, sp, #24
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
; CHECK-NEXT:    b .LBB1_5
; CHECK-NEXT:  .LBB1_5:
; CHECK-NEXT:    sub x0, x29, #32
; CHECK-NEXT:    bl _ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
; CHECK-NEXT:    b .LBB1_6
; CHECK-NEXT:  .LBB1_6:
; CHECK-NEXT:    ldr x0, [sp, #16]
; CHECK-NEXT:    bl _Unwind_Resume
  %1 = alloca i32, align 4
  %2 = alloca %"class.std::__h::basic_string", align 8
  %3 = alloca %"class.std::__h::basic_string", align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  store i32 0, ptr %1, align 4
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B6v15004IDnEEPKc(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef @.str.1)
  invoke void @_Z12ReturnStringv(ptr sret(%"class.std::__h::basic_string") align 8 %3)
          to label %6 unwind label %10

6:                                                ; preds = %0
  %7 = invoke noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLB6v15004ERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %3)
          to label %8 unwind label %14

8:                                                ; preds = %6
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(ptr noundef nonnull align 8 dereferenceable(24) %3) #8
  store i32 0, ptr %1, align 4
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(ptr noundef nonnull align 8 dereferenceable(24) %2) #8
  %9 = load i32, ptr %1, align 4
  ret i32 %9

10:                                               ; preds = %0
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  store ptr %12, ptr %4, align 8
  %13 = extractvalue { ptr, i32 } %11, 1
  store i32 %13, ptr %5, align 4
  br label %18

14:                                               ; preds = %6
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  store ptr %16, ptr %4, align 8
  %17 = extractvalue { ptr, i32 } %15, 1
  store i32 %17, ptr %5, align 4
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(ptr noundef nonnull align 8 dereferenceable(24) %3) #8
  br label %18

18:                                               ; preds = %14, %10
  call void @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(ptr noundef nonnull align 8 dereferenceable(24) %2) #8
  br label %19

19:                                               ; preds = %18
  %20 = load ptr, ptr %4, align 8
  %21 = load i32, ptr %5, align 4
  %22 = insertvalue { ptr, i32 } undef, ptr %20, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: mustprogress noinline optnone
declare  noundef nonnull align 8 dereferenceable(24) ptr @_ZNSt3__h12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEpLB6v15004ERKS5_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1) #0  align 2
