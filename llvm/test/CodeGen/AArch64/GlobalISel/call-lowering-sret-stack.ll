; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=aarch64-linux-ohos -global-isel -O0 -verify-machineinstrs -frame-pointer=all < %s | FileCheck %s

%"class.std::__h::stack" = type { %"class.std::__h::deque" }
%"class.std::__h::deque" = type { %"class.std::__h::__deque_base" }
%"class.std::__h::__deque_base" = type { %"struct.std::__h::__split_buffer", i64, %"class.std::__h::__compressed_pair.1" }
%"struct.std::__h::__split_buffer" = type { ptr, ptr, ptr, %"class.std::__h::__compressed_pair" }
%"class.std::__h::__compressed_pair" = type { %"struct.std::__h::__compressed_pair_elem" }
%"struct.std::__h::__compressed_pair_elem" = type { ptr }
%"class.std::__h::__compressed_pair.1" = type { %"struct.std::__h::__compressed_pair_elem.2" }
%"struct.std::__h::__compressed_pair_elem.2" = type { i64 }
%"class.std::__h::__deque_iterator" = type { ptr, ptr }
%"struct.std::__h::integral_constant" = type { i8 }
%"struct.std::__h::is_trivially_destructible" = type { i8 }
%"struct.std::__h::integral_constant.7" = type { i8 }
%"struct.std::__h::__default_init_tag" = type { i8 }
%"struct.std::__h::__split_buffer.8" = type { ptr, ptr, ptr, %"class.std::__h::__compressed_pair.9" }
%"class.std::__h::__compressed_pair.9" = type { %"struct.std::__h::__compressed_pair_elem", %"struct.std::__h::__compressed_pair_elem.10" }
%"struct.std::__h::__compressed_pair_elem.10" = type { ptr }
%"class.std::__h::unique_ptr" = type { %"class.std::__h::__compressed_pair.11" }
%"class.std::__h::__compressed_pair.11" = type { %"struct.std::__h::__compressed_pair_elem.12", %"struct.std::__h::__compressed_pair_elem.13" }
%"struct.std::__h::__compressed_pair_elem.12" = type { ptr }
%"struct.std::__h::__compressed_pair_elem.13" = type { %"class.std::__h::__allocator_destructor" }
%"class.std::__h::__allocator_destructor" = type { ptr, i64 }
%"class.std::__h::move_iterator" = type { ptr }
%"struct.std::__h::__less" = type { i8 }
%"struct.std::__h::__allocation_result" = type { ptr, i64 }
%"struct.std::__h::pair" = type { ptr, ptr }
%"struct.std::__h::__split_buffer<int *, std::__h::allocator<int *> &>::_ConstructTransaction" = type { ptr, ptr, ptr }
%"struct.std::__h::random_access_iterator_tag" = type { i8 }

@_ZTISt20bad_array_new_length = external constant ptr

; Function Attrs: mustprogress noinline optnone
define dso_local void @_Z8getstackv(ptr noalias sret(%"class.std::__h::stack") align 8 %0) #0 personality ptr @__gxx_personality_v0 {
; CHECK-LABEL: _Z8getstackv:
; CHECK:       .Lfunc_begin0:
; CHECK-NEXT:    .cfi_startproc
; CHECK-NEXT:    .cfi_personality 0, __gxx_personality_v0
; CHECK-NEXT:    .cfi_lsda 0, .Lexception0
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    sub sp, sp, #80
; CHECK-NEXT:    .cfi_def_cfa_offset 80
; CHECK-NEXT:    stp x29, x30, [sp, #64] // 16-byte Folded Spill
; CHECK-NEXT:    add x29, sp, #64
; CHECK-NEXT:    .cfi_def_cfa w29, 16
; CHECK-NEXT:    .cfi_offset w30, -8
; CHECK-NEXT:    .cfi_offset w29, -16
; CHECK-NEXT:    mov x0, x8
; CHECK-NEXT:    str x0, [sp, #16] // 8-byte Folded Spill
; CHECK-NEXT:    mov x8, x0
; CHECK-NEXT:    str x8, [sp] // 8-byte Folded Spill
; CHECK-NEXT:    mov x8, x0
; CHECK-NEXT:    stur x8, [x29, #-8]
; CHECK-NEXT:    mov w8, wzr
; CHECK-NEXT:    mov w9, #1
; CHECK-NEXT:    str w9, [sp, #12] // 4-byte Folded Spill
; CHECK-NEXT:    and w8, w8, #0x1
; CHECK-NEXT:    and w8, w8, w9
; CHECK-NEXT:    sturb w8, [x29, #-9]
; CHECK-NEXT:    bl _ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEEC2B6v15004Ev
; CHECK-NEXT:    ldr w8, [sp, #12] // 4-byte Folded Reload
; CHECK-NEXT:    ldr x0, [sp, #16] // 8-byte Folded Reload
; CHECK-NEXT:    sub x1, x29, #16
; CHECK-NEXT:    stur w8, [x29, #-16]
; CHECK-NEXT:  .Ltmp0:
; CHECK-NEXT:    bl _ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi
; CHECK-NEXT:  .Ltmp1:
; CHECK-NEXT:    b .LBB0_1
; CHECK-NEXT:  .LBB0_1:
; CHECK-NEXT:    ldr x0, [sp, #16] // 8-byte Folded Reload
; CHECK-NEXT:    add x1, sp, #32
; CHECK-NEXT:    mov w8, #2
; CHECK-NEXT:    str w8, [sp, #32]
; CHECK-NEXT:  .Ltmp2:
; CHECK-NEXT:    bl _ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi
; CHECK-NEXT:  .Ltmp3:
; CHECK-NEXT:    b .LBB0_2
; CHECK-NEXT:  .LBB0_2:
; CHECK-NEXT:    ldr x0, [sp, #16] // 8-byte Folded Reload
; CHECK-NEXT:    add x1, sp, #28
; CHECK-NEXT:    mov w8, #3
; CHECK-NEXT:    str w8, [sp, #28]
; CHECK-NEXT:  .Ltmp4:
; CHECK-NEXT:    bl _ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi
; CHECK-NEXT:  .Ltmp5:
; CHECK-NEXT:    b .LBB0_3
; CHECK-NEXT:  .LBB0_3:
; CHECK-NEXT:    mov w8, #1
; CHECK-NEXT:    and w8, w8, #0x1
; CHECK-NEXT:    and w8, w8, #0x1
; CHECK-NEXT:    sturb w8, [x29, #-9]
; CHECK-NEXT:    ldurb w8, [x29, #-9]
; CHECK-NEXT:    tbnz w8, #0, .LBB0_6
; CHECK-NEXT:    b .LBB0_5
; CHECK-NEXT:  .LBB0_4:
; CHECK-NEXT:  .Ltmp6:
; CHECK-NEXT:    mov x9, x0
; CHECK-NEXT:    ldr x0, [sp, #16] // 8-byte Folded Reload
; CHECK-NEXT:    mov w8, w1
; CHECK-NEXT:    stur x9, [x29, #-24]
; CHECK-NEXT:    stur w8, [x29, #-28]
; CHECK-NEXT:    bl _ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev
; CHECK-NEXT:    b .LBB0_7
; CHECK-NEXT:  .LBB0_5:
; CHECK-NEXT:    ldr x0, [sp, #16] // 8-byte Folded Reload
; CHECK-NEXT:    bl _ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev
; CHECK-NEXT:    b .LBB0_6
; CHECK-NEXT:  .LBB0_6:
; CHECK-NEXT:    ldr x0, [sp] // 8-byte Folded Reload
; CHECK-NEXT:    ldp x29, x30, [sp, #64] // 16-byte Folded Reload
; CHECK-NEXT:    add sp, sp, #80
; CHECK-NEXT:    ret
; CHECK-NEXT:  .LBB0_7:
; CHECK-NEXT:    ldur x0, [x29, #-24]
; CHECK-NEXT:    bl _Unwind_Resume
  %2 = alloca ptr, align 8
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store ptr %0, ptr %2, align 8
  store i1 false, ptr %3, align 1
  call void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEEC2B6v15004Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) #11
  store i32 1, ptr %4, align 4
  invoke void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 4 dereferenceable(4) %4)
          to label %9 unwind label %13

9:                                                ; preds = %1
  store i32 2, ptr %7, align 4
  invoke void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 4 dereferenceable(4) %7)
          to label %10 unwind label %13

10:                                               ; preds = %9
  store i32 3, ptr %8, align 4
  invoke void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %11 unwind label %13

11:                                               ; preds = %10
  store i1 true, ptr %3, align 1
  %12 = load i1, ptr %3, align 1
  br i1 %12, label %18, label %17

13:                                               ; preds = %10, %9, %1
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  store ptr %15, ptr %5, align 8
  %16 = extractvalue { ptr, i32 } %14, 1
  store i32 %16, ptr %6, align 4
  call void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) #11
  br label %19

17:                                               ; preds = %11
  call void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) #11
  br label %18

18:                                               ; preds = %17, %11
  ret void

19:                                               ; preds = %13
  %20 = load ptr, ptr %5, align 8
  %21 = load i32, ptr %6, align 4
  %22 = insertvalue { ptr, i32 } undef, ptr %20, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23
}

declare  void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEEC2B6v15004Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #1  align 2

declare  void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEE4pushB6v15004EOi(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 4 dereferenceable(4) %1) #0 align 2

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind optnone
declare  dso_local void @_ZNSt3__h5stackIiNS_5dequeIiNS_9allocatorIiEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(48) %0) unnamed_addr #1 align 2

declare void @__cxa_end_catch()
